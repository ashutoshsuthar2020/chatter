apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chat-app.server.fullname" . }}
  labels:
    {{- include "chat-app.server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.server.autoscaling.enabled }}
  replicas: {{ .Values.server.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chat-app.server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "chat-app.server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chat-app.serviceAccountName" . }}
      securityContext:
        fsGroup: 1001
      containers:
        - name: {{ .Values.server.name }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          image: {{ include "chat-app.server.image" . }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.server.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.server.healthcheck.liveness.path }}
              port: http
            initialDelaySeconds: {{ .Values.server.healthcheck.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.server.healthcheck.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.server.healthcheck.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.server.healthcheck.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.server.healthcheck.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.server.healthcheck.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.server.healthcheck.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.server.healthcheck.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.server.healthcheck.readiness.failureThreshold }}
          envFrom:
            - configMapRef:
                name: {{ include "chat-app.fullname" . }}-config
            - secretRef:
                name: {{ include "chat-app.fullname" . }}-secret
          env:
            - name: PORT
              value: {{ .Values.server.service.port | quote }}
            - name: NODE_ENV
              value: "production"
            - name: REDIS_HOST
              value: {{ include "chat-app.redis.host" . | quote }}
            - name: REDIS_PORT
              value: {{ include "chat-app.redis.port" . | quote }}
            - name: MONGODB_HOST
              value: {{ include "chat-app.mongodb.host" . | quote }}
            - name: MONGODB_PORT
              value: {{ include "chat-app.mongodb.port" . | quote }}
            - name: MONGODB_DATABASE
              value: {{ include "chat-app.mongodb.database" . | quote }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chat-app.client.fullname" . }}
  labels:
    {{- include "chat-app.client.labels" . | nindent 4 }}
spec:
  {{- if not .Values.client.autoscaling.enabled }}
  replicas: {{ .Values.client.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chat-app.client.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "chat-app.client.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chat-app.serviceAccountName" . }}
      securityContext:
        fsGroup: 1001
      containers:
        - name: {{ .Values.client.name }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          image: {{ include "chat-app.client.image" . }}
          imagePullPolicy: {{ .Values.client.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.client.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.client.healthcheck.liveness.path }}
              port: http
            initialDelaySeconds: {{ .Values.client.healthcheck.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.client.healthcheck.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.client.healthcheck.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.client.healthcheck.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.client.healthcheck.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.client.healthcheck.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.client.healthcheck.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.client.healthcheck.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.client.healthcheck.readiness.failureThreshold }}
          envFrom:
            - configMapRef:
                name: {{ include "chat-app.fullname" . }}-config
          env:
            - name: PORT
              value: {{ .Values.client.service.targetPort | quote }}
            - name: REACT_APP_API_URL
              value: "http://{{ include "chat-app.server.fullname" . }}:{{ .Values.server.service.port }}"
          resources:
            {{- toYaml .Values.client.resources | nindent 12 }}
      {{- with .Values.client.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.client.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.client.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
